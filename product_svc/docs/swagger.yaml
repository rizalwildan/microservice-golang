openapi: 3.0.0
info:
  title: Product Service API
  description: API design for product service
  version: 1.0.0

servers:
  - url: http://localhost:3002
    description: Endpoint ini digunakan untuk local development
  - url: http://localhost:8081/v1/products
    description: Endpoint ini digunakan untuk external client yang ingin berkomunikasi dengan product service

paths:
  /products:
    get:
      summary: Fetch list products
      parameters:
        - in: query
          name: merchant_id
          schema:
            type: integer
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ArrayOfProducts"

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Unauthorized"

        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ServerError"

    post:
      summary: Create product
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Meow kitten 1kg
                description:
                  type: string
                  example: sort desc
                quantity:
                  type: integer
                  example: 10
                price:
                  type: integer
                  example: 50000
                merchant_id:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Created Product
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Created"

        '422':
          description: Validation Failed
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Validation"

        '404':
          description: Merchant whit given id not found
          content:
            application/json:
              schema:
                $ref: "#components/schemas/MerchantNotFound"

        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#components/schemas/ServerError"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

  schemas:
    Products:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Whiskas 500grm
        description:
          type: string
          example: sort description
        quantity:
          type: integer
          example: 10
        merchant_id:
          type: integer
          example: 1

    Created:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: created

    MerchantNotFound:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: merchant not found

    Validation:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: validation failed
        errors:
          type: string
          example: name must be required

    Unauthorized:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: missing or malformed API Key

    ServerError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Something happen

    ArrayOfProducts:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: oke
        data:
          type: array
          items:
            type: object
            $ref: "#components/schemas/Products"